<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1. Introductie in C on Software Ontwerp in C(&#43;&#43;)</title>
    <link>https://kuleuven-diepenbeek.github.io/cpp-course/c/</link>
    <description>Recent content in 1. Introductie in C on Software Ontwerp in C(&#43;&#43;)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <managingEditor>&lt;i&gt;fname&lt;/i&gt;.&lt;i&gt;lname&lt;/i&gt;A T&lt;i&gt;kuleuven.be&lt;/i&gt; (Wouter Groeneveld, Kris Aerts)</managingEditor>
    <webMaster>&lt;i&gt;fname&lt;/i&gt;.&lt;i&gt;lname&lt;/i&gt;A T&lt;i&gt;kuleuven.be&lt;/i&gt; (Wouter Groeneveld, Kris Aerts)</webMaster>
    
	<atom:link href="https://kuleuven-diepenbeek.github.io/cpp-course/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Voorbereiding Thuis</title>
      <link>https://kuleuven-diepenbeek.github.io/cpp-course/c/prep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>&lt;i&gt;fname&lt;/i&gt;.&lt;i&gt;lname&lt;/i&gt;A T&lt;i&gt;kuleuven.be&lt;/i&gt; (Wouter Groeneveld, Kris Aerts)</author>
      <guid>https://kuleuven-diepenbeek.github.io/cpp-course/c/prep/</guid>
      <description>Installaties Volg de installatieinstructies en zorg ervoor dat de basisvereisten geïnstalleerd zijn:
 Een C compiler geïnstalleerd is (build essentials) Je vlot toegang hebt tot cmdline (Op Windows: met cmder, zie bovenstaande instructies) git geïnstalleerd is  Controle  Controleer of git werkt door git version uit te voeren in cmdline. Controleer of je compiler correct is geïnstalleerd door gcc -v uit te voeren, en make -v. Kopiëer het eerste voorbeeld in de tekst van labo 1 (&amp;ldquo;vergelijkingen met Java&amp;rdquo;) en probeer dit zelf te compileren in C met gcc [bestand.</description>
    </item>
    
    <item>
      <title>Labo 1: Introductie in C</title>
      <link>https://kuleuven-diepenbeek.github.io/cpp-course/c/labo-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>&lt;i&gt;fname&lt;/i&gt;.&lt;i&gt;lname&lt;/i&gt;A T&lt;i&gt;kuleuven.be&lt;/i&gt; (Wouter Groeneveld, Kris Aerts)</author>
      <guid>https://kuleuven-diepenbeek.github.io/cpp-course/c/labo-1/</guid>
      <description>De C programmeertaal De C taal is een programmeertaal in de jaren &amp;lsquo;70 ontwikkeld om makkelijk hardware te kunnen aanspreken. C was/is in essentie niet veel meer dan een kleine abstractielaag bovenop assembly.
C is een imperatieve programmeertaal. Dat zal je bij het oefenen wel merken: we schrijven instructies als statements. Deze regels of statements zijn gestructureerd in functies en struct types. Het jammere hier aan is dat er weinig declarativiteit aan de pas komt.</description>
    </item>
    
    <item>
      <title>Labo 2: Pointers in C en C&#43;&#43;</title>
      <link>https://kuleuven-diepenbeek.github.io/cpp-course/c/labo-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>&lt;i&gt;fname&lt;/i&gt;.&lt;i&gt;lname&lt;/i&gt;A T&lt;i&gt;kuleuven.be&lt;/i&gt; (Wouter Groeneveld, Kris Aerts)</author>
      <guid>https://kuleuven-diepenbeek.github.io/cpp-course/c/labo-2/</guid>
      <description>In onderstaande schematische voorbeelden zijn de volgende concepten expliciet te onderscheiden:
 Een naam van een variabele Een waarde van een variabele  En de volgende impliciet:
 Het type van een variabele Het adres van een variabele  Het type van een variabele bepaalt de hoeveelheid geheugen die vrijgemaakt wordt om de waarde te kunnen bewaren. De waarde is ofwel een actuele waarde ofwel een adres dat refereert naar een andere waarde.</description>
    </item>
    
    <item>
      <title>Labo 2b: De stack VS de heap</title>
      <link>https://kuleuven-diepenbeek.github.io/cpp-course/c/stack-vs-heap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>&lt;i&gt;fname&lt;/i&gt;.&lt;i&gt;lname&lt;/i&gt;A T&lt;i&gt;kuleuven.be&lt;/i&gt; (Wouter Groeneveld, Kris Aerts)</author>
      <guid>https://kuleuven-diepenbeek.github.io/cpp-course/c/stack-vs-heap/</guid>
      <description>De Stack en de Heap Dit hoofdstuk is een kopie van hoofdstuk 8.1: Stack VS Heap uit het vak Besturingssystemen en C voor 2de bachelor ICT/Electronica. Voor het vak Softwareontwerp in C/C++ wordt er eveneens verwacht de nodige kennis te bezitten over de werking van de stack en de heap.
Optionele begeleidende videos en oefeningen zijn beschikbaar in hoofdstuk 8.2 en 8.3 in bovesntaande cursus.
Program Memory  Compiled computer programs are divided into different sections, each with their own specific needs and properties.</description>
    </item>
    
  </channel>
</rss>