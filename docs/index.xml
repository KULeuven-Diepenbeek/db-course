<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Index on Databases</title>
    <link>http://localhost:1313/db-course/</link>
    <description>Recent content in Index on Databases</description>
    <generator>Hugo</generator>
    <language>en-uk</language>
    <atom:link href="http://localhost:1313/db-course/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ACID</title>
      <link>http://localhost:1313/db-course/transacties/acid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/transacties/acid/</guid>
      <description>&lt;p&gt;ACID is een acronym dat we gebruiken binnen databases dat een lijst van voorwaarden omschrijft waar dat database systeem aan moet voldoen. De regels van ACID worden over het algemeen geïmplementeerd door het concept van &lt;a href=&#34;./transacties/basics&#34;&gt;Transacties&lt;/a&gt;. ACID omschrijft vier principes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;tomicity&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;C&lt;/strong&gt;onsistency&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;I&lt;/strong&gt;solation&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;D&lt;/strong&gt;urability&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;atomicity&#34;&gt;Atomicity&lt;/h2&gt;&#xA;&lt;p&gt;Transacties bestaan vaak uit meerdere &lt;strong&gt;statements&lt;/strong&gt;. Atomicity verwacht dus dat al deze statements als &lt;strong&gt;één geheel&lt;/strong&gt; worden beschouwd. Ofwel faalt alles, ofwel slaagt alles. Zo wordt er nooit slechts een deel van de changes bewaard.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Database Basics</title>
      <link>http://localhost:1313/db-course/sql/rdbms-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/sql/rdbms-basics/</guid>
      <description>&lt;p&gt;Een &lt;strong&gt;database&lt;/strong&gt; is niet meer dan een verzameling van gegevens. Een &lt;strong&gt;DBMS&lt;/strong&gt; (&lt;strong&gt;D&lt;/strong&gt;ata&lt;strong&gt;B&lt;/strong&gt;ase &lt;strong&gt;M&lt;/strong&gt;anagement &lt;strong&gt;S&lt;/strong&gt;ystem) is de software waarmee databases beheerd of aangemaakt kunnen worden.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-waarom-een-database-gebruiken&#34;&gt;1. Waarom een database gebruiken?&lt;/h2&gt;&#xA;&lt;p&gt;Een database wordt ook maar gewoon opgeslagen op een file system. Dus waarom kan ik dan niet zelf files gebruiken om mijn data op te slaan?&lt;/p&gt;&#xA;&lt;p&gt;Databases bieden een aantal key features:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Performant (index management)&lt;/li&gt;&#xA;&lt;li&gt;Betere integratie met andere applicaties&lt;/li&gt;&#xA;&lt;li&gt;Uniform DBMS voor bewerken of ophalen van data&lt;/li&gt;&#xA;&lt;li&gt;Concurrency ondersteuning&lt;/li&gt;&#xA;&lt;li&gt;Security &amp;amp; Privacy van data&lt;/li&gt;&#xA;&lt;li&gt;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In het tweedejaarsvak &lt;a href=&#34;https://kuleuven-diepenbeek.github.io/osc-course/&#34;&gt;Besturingssystemen en C&lt;/a&gt; leerde je dat IO manipulatie &lt;strong&gt;heel dure operaties&lt;/strong&gt; zijn. Een erg groot bestand openen of een &lt;code&gt;seek()&lt;/code&gt; operatie uitvoeren daarop, duizenden bestanden tegelijkertijd openen voor data access, &amp;hellip;&amp;mdash;allemaal voorbeelden van nadelen waar een database de oplossing kan bieden. Achterliggend werkt het DBMS systeem nog steeds met files, maar dat is supergeoptimaliseerd door bijvoorbeeld gebruik te maken van verschillende niveaus van caching, file chunking, gedistribueerde modellen, &amp;hellip; De theorie en implementatie van een DBMS gaan we niet behandelen in deze cursus: de focus ligt op het gebruik van bestaande systemen.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DDL</title>
      <link>http://localhost:1313/db-course/sql-ddl-dml/ddl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/sql-ddl-dml/ddl/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Data Defintion Language&lt;/strong&gt; is de taal die we gebruiken om de structuur van onze database te veranderen. We kunnen hiermee tabellen aanmaken, wijzigen of verwijderen. Maar ook indexen, views, triggers of stored procedures worden hiermee aangemaakt.&lt;/p&gt;&#xA;&lt;p&gt;Zowat elke RDBMS heeft tooling om DDL te doen via een handige interface, in plaats van dit zelf uit te schrijven. In de praktijk ga je waarschijnlijk met beiden in contact komen. We gaan &lt;a href=&#34;https://sqlitebrowser.org/dl/&#34;&gt;DB Browser for SQLite&lt;/a&gt; gebruiken tijdens onze lessen.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Database Componenten</title>
      <link>http://localhost:1313/db-course/sql/rdbms-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/sql/rdbms-components/</guid>
      <description>&lt;h2 id=&#34;1-three-layer-architecture&#34;&gt;1. Three Layer Architecture&lt;/h2&gt;&#xA;&lt;img src=&#34;./slides/img/threelayerarchitecture.jpg&#34; style=&#34;max-width: 75%&#34; /&gt;&#xD;&#xA;&lt;h3 id=&#34;logical-layer&#34;&gt;Logical Layer&lt;/h3&gt;&#xA;&lt;p&gt;De &lt;strong&gt;Logical Layer&lt;/strong&gt; is waar we bepalen hoe onze data gestructureerd wordt. Hier bepalen we wat voor data we bijhouden, hoe die data eruitziet en hoe die zich gedraagt ten op zichte van onze andere datamodellen.&lt;/p&gt;&#xA;&lt;p&gt;Enkele voorbeelden hiervan zijn:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Een BOEK mag door maximum &lt;em&gt;0 of 1&lt;/em&gt; PERSONEN ontleend worden.&lt;/li&gt;&#xA;&lt;li&gt;Een PERSOON mag &lt;em&gt;meerdere&lt;/em&gt; BOEKEN ontlenen.&lt;/li&gt;&#xA;&lt;li&gt;Een PERSOON is een &lt;em&gt;subtype&lt;/em&gt; van een GEBRUIKER.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;oefening&#34;&gt;Oefening&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Hoe zou een database model van een bibliotheek eruit zien? Teken zelf eens uit hoe dit gemodelleerd zou kunnen worden.&lt;/li&gt;&#xA;&lt;li&gt;Hoe houdt ik bij dat een boek uitgeleend werd?&lt;/li&gt;&#xA;&lt;li&gt;Wat als ik ook andere dingen wil uitlenen uit de bibliotheek, zoals DVD&amp;rsquo;s of eBooks?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;internal-layer&#34;&gt;Internal Layer&lt;/h3&gt;&#xA;&lt;p&gt;De &lt;strong&gt;Internal Layer&lt;/strong&gt; houdt zich bezig met alle details over hoe de data bewaard wordt. Sommige van de concepten die hier aan bod komen zijn de volgenden:&lt;/p&gt;</description>
    </item>
    <item>
      <title>DML</title>
      <link>http://localhost:1313/db-course/sql-ddl-dml/dml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/sql-ddl-dml/dml/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Data Modification Language&lt;/strong&gt; is de taal die we gebruiken om de data van onze database te bekijken of aan te passen. Met DML kunnen we CRUD operaties uitvoeren. Create, Read, Update en Delete.&lt;/p&gt;&#xA;&lt;h2 id=&#34;select&#34;&gt;SELECT&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;SELECT&lt;/code&gt; is het commando dat we gebruiken om data op te vragen uit de database.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    SELECT { DISTINCT } expression&#xD;&#xA;    FROM table&#xD;&#xA;    { WHERE condition }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;like-operator&#34;&gt;LIKE operator&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;LIKE&lt;/code&gt; wordt gebruikt om wildcard searches uit te voeren. Deze kan enkel gebruikt worden op alfanumerieke velden.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Transaction Mgmt. Basics</title>
      <link>http://localhost:1313/db-course/transacties/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/transacties/basics/</guid>
      <description>&lt;p&gt;Moesten de database systemen voornamelijk &lt;strong&gt;single-user&lt;/strong&gt; systemen zijn, dan was er geen probleem geweest want dan werden alle opdrachten gewoon sequentieel uitgevoerd. SQL Database Management Systems (DBMS) systemen zijn echter vooral &lt;strong&gt;multi-user&lt;/strong&gt; systemen. Om zowel verschillende gebruikers te kunnen behandelen als nog steeds de &lt;strong&gt;ACID regels&lt;/strong&gt; ondersteunen, is er een systeem nodig dat soms gebruikers &amp;ldquo;in wacht&amp;rdquo; zet. Stel je voor dat Jens en Jolien tegelijkertijd data lezen én updaten&amp;mdash;in dezelfde tabel, hetzelfde record. Jens leest uit &amp;ldquo;de rekening staat op 100 EUR&amp;rdquo; en Jolien haalt er 10 EUR vanaf. Wie mag eerst? Kan dit tegelijkertijd? Jens krijgt te horen dat er 100 EUR op de rekening staat, terwijl in werkelijkheid dit 10 EUR minder is.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ACID</title>
      <link>http://localhost:1313/db-course/sql/rdbms-acid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/sql/rdbms-acid/</guid>
      <description>&lt;p&gt;ACID is een acronym die we gebruiken binnen databases dat een lijst van voorwaarden omschrijft waar dat database systeem aan moet voldoen. De regels van ACID worden over het algemeen geïmplementeerd door het concept van &lt;a href=&#34;./transacties/basics&#34;&gt;Transacties&lt;/a&gt;. ACID omschrijft vier principes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;tomicity&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;C&lt;/strong&gt;onsistency&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;I&lt;/strong&gt;solation&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;D&lt;/strong&gt;urability&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;De ACID principes komen in de praktijk nog verder aan bod in het hoofdstuk over &lt;a href=&#34;./transacties/&#34;&gt;RDBMS transacties&lt;/a&gt;, dus geen paniek als onderstaande theorie nog niet onmiddellijk duidelijk is.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Concurrency Control</title>
      <link>http://localhost:1313/db-course/transacties/concurrency-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/transacties/concurrency-control/</guid>
      <description>&lt;p&gt;De transactie management scheduler (zie &lt;a href=&#34;./transacties/basics&#34;&gt;transacties - basics&lt;/a&gt;) is verantwoordelijk om verschillende transacties correct in te plannen zonder dat er data problemen of clashes optreden.&lt;/p&gt;&#xA;&lt;h2 id=&#34;problemen-welke-problemen&#34;&gt;Problemen? Welke problemen?&lt;/h2&gt;&#xA;&lt;p&gt;Denk terug aan het bank transfer probleem van de vorige sectie. Veronderstel dat deze keer zowel Jens als Marianne &lt;code&gt;€10&lt;/code&gt; willen overmaken naar Jolien. Als we dat als volgt doen:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Lees het huidige bedrag op de source rekening&lt;/li&gt;&#xA;&lt;li&gt;Verminder bedrag van source rekening&lt;/li&gt;&#xA;&lt;li&gt;Lees het huidige bedrag op de destination rekening&lt;/li&gt;&#xA;&lt;li&gt;Verhoog bedrag van destination rekening&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Dan zou het kunnen dat bij het uitlezen van #3, Jolien&amp;rsquo;s rekening bij de transactie van Marianne al &lt;code&gt;€110&lt;/code&gt; uitleest omdat Jens zijn verhoging al is doorgekomen. Maar net dan canceled de transactie van Jens en wordt de rekening van Jolien en van Jens (terecht) terug op de vorige waarde ingesteld (dus &lt;code&gt;€100&lt;/code&gt; voor Jolien). De transactie van Marjanne check nie nog eens het startbedrag en werkt dus nog altijd onder de veronderstelling dat er &lt;code&gt;€10&lt;/code&gt; bij &lt;code&gt;€110&lt;/code&gt; moet worden opgeteld en is op het einde het eindtotaal van Jolien toch &lt;code&gt;€120&lt;/code&gt; en Jens heeft geen geld verloren. &lt;em&gt;Oeps!&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Failures-Rollbacks</title>
      <link>http://localhost:1313/db-course/transacties/failures-rollbacks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/transacties/failures-rollbacks/</guid>
      <description>&lt;p&gt;Voorbereidende &lt;code&gt;CREATE&lt;/code&gt; statements (Dit is SQLite syntax!) Zie &lt;a href=&#34;https://sqlite.org/autoinc.html&#34;&gt;SQLite manual&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;EXISTS&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;student&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;student&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;studnr&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;naam&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;voornaam&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;),&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;goedbezig&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;BOOL&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;EXISTS&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;INTEGER&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;AUTOINCREMENT&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;date&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;DATETIME&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;DEFAULT&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;foreign_id&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;msg&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;TEXT&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;student&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;studnr&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;naam&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;voornaam&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;goedbezig&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;Trekhaak&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;Jaak&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;student&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;studnr&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;naam&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;voornaam&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;goedbezig&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;456&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;Peeters&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;Jos&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;student&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;studnr&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;naam&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;voornaam&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;goedbezig&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;890&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;Dongmans&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;Ding&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;system-failure-simulatie&#34;&gt;System failure simulatie&lt;/h2&gt;&#xA;&lt;h3 id=&#34;in-sqlite-met-db-browser&#34;&gt;In SQLite met DB Browser&lt;/h3&gt;&#xA;&lt;p&gt;Gegeven een aantal SQL statements, waarvan niet alle statements kloppen, maar die wel allemaal bij elkaar horen als één &lt;strong&gt;atomaire transactie&lt;/strong&gt;. Dat betekent dat als er één van die statements misloopt, de rest teruggedraait zou moeten worden. Het spreekt voor zich dat zonder speciale handelingen, zoals het beheren van transacties, dit niet gebeurt. Een eenvoudig voorbeeld demonstreert dit.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/db-course/nosql/4oef3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/nosql/4oef3/</guid>
      <description>&lt;script src=&#34;//cdn.jsdelivr.net/npm/pouchdb@7.2.1/dist/pouchdb.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;button id=&#34;btn&#34;&gt;Print docs&lt;/button&gt;&#xD;&#xA;&lt;pre id=&#34;pre&#34;&gt;&#xD;&#xA;...&#xD;&#xA;&lt;/pre&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;function print(doc) {&#xD;&#xA;&#x9;document.querySelector(&#39;#pre&#39;).innerHTML = JSON.stringify(doc);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;  var db = new PouchDB(&#39;my_database&#39;);&#xD;&#xA;  // do your setup here&#xD;&#xA;&#xD;&#xA;  function queryDocs() {&#xD;&#xA;  &#x9; // do your thing here&#xD;&#xA;  &#x9; print(&#39;goed bezig&#39;);&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;document.querySelector(&#34;#btn&#34;).addEventListener(&#34;click&#34;, queryDocs);&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>1. Big Data Basics</title>
      <link>http://localhost:1313/db-course/bigdata/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/bigdata/basics/</guid>
      <description>&lt;p&gt;De &lt;strong&gt;Big&lt;/strong&gt; in &lt;em&gt;Big Data&lt;/em&gt; mag je letterlijk nemen. IBM berekende onlangs dat wij allemaal 2.5 quintillion bytes aan data genereren. Elke minuut meer dan 350.000 tweets, 75.000 uren van Netflix video streams, meer dan 35.000 Apple store apps gedownload, enzovoort.&lt;/p&gt;&#xA;&lt;p&gt;De term &lt;em&gt;Big Data&lt;/em&gt; is al sinds eind de jaren negentig aan een opmars bezig. We kunnen &amp;ldquo;grote datasets&amp;rdquo; categoriseren afhankelijk van wat we noemen de &lt;strong&gt;vijf Vs&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Volume&lt;/strong&gt;&amp;mdash;Het gaat (uiteraard) over een alsmaar groeiend &amp;ldquo;groot volume&amp;rdquo; aan data;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Velocity&lt;/strong&gt;&amp;mdash;De snelheid waarmee de data in en uit systemem vloeit die altijd maar toeneemt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Variety&lt;/strong&gt;&amp;mdash;De range aan data types breidt altijd maar uit (JSON, XML, RDBMS, noSQL, files, &amp;hellip;);&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Veracity&lt;/strong&gt;&amp;mdash;Hoe waarheidsgetrouw is de data eigenlijk wel? Data vertoont alsmaar vaker inconsistenties/ambiguiteit;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Value&lt;/strong&gt;&amp;mdash;Wat heb je aan al die data zonder er iets waardevol mee te doen (zoals een crutiale business beslissing)?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;figure&gt;&#xD;&#xA;&#x9;&lt;a href=&#34;./img/5vs.jpg&#34; data-featherlight=&#34;image&#34;&gt;&#xD;&#xA;&#x9;&#x9;&lt;img src=&#34;./img/5vs.jpg&#34;   title=&#34;src: tistory.com&#34;&gt;&#xD;&#xA;&#x9;&lt;/a&gt;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&lt;figcaption&gt;src: tistory.com&lt;/figcaption&gt;&#xD;&#xA;&#x9;&#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>1. NoSQL Basics</title>
      <link>http://localhost:1313/db-course/nosql/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/nosql/basics/</guid>
      <description>&lt;h2 id=&#34;het-schaalbaarheid-probleem&#34;&gt;Het schaalbaarheid probleem&lt;/h2&gt;&#xA;&lt;p&gt;Het probleem met RDMS (&lt;strong&gt;relationele&lt;/strong&gt; database management systems) is vaak &lt;em&gt;schaalbaarheid&lt;/em&gt;. Gezien de ACID data validity voorwaarden is altijd de vraag: is dit schaalbaar?&lt;/p&gt;&#xA;&lt;h3 id=&#34;optie-1-vertical-scaling&#34;&gt;Optie 1: Vertical scaling&lt;/h3&gt;&#xA;&lt;p&gt;De makkelijke oplossing is &amp;ldquo;scaling up&amp;rdquo;: meer storage, CPU, RAM, &amp;hellip; voorzien zodat er meer cycles kunnen benut worden en hopelijk ook meer transacties concurrent kunnen worden verwerkt (zie &lt;a href=&#34;./transacties/basics&#34;&gt;transacties basics&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;&lt;figure&gt;&#xD;&#xA;&#x9;&lt;a href=&#34;./slides/img/moar.jpg&#34; data-featherlight=&#34;image&#34;&gt;&#xD;&#xA;&#x9;&#x9;&lt;img src=&#34;./slides/img/moar.jpg&#34;  &gt;&#xD;&#xA;&#x9;&lt;/a&gt;&#xD;&#xA;&#x9;&#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Je botst hier echter snel op &lt;strong&gt;hardware limitaties&lt;/strong&gt;&amp;mdash;niet alles is opgelost met een latje RAM.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1. XML Basics</title>
      <link>http://localhost:1313/db-course/xml/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/xml/basics/</guid>
      <description>&lt;h1 id=&#34;xml-data-storage&#34;&gt;XML Data Storage&lt;/h1&gt;&#xA;&lt;p&gt;XML staat voor &lt;strong&gt;Extensible Markup Language&lt;/strong&gt;. Het is een taal die we gebruiken om met tags gegevens te structureren. Een tag opent zich op volgende manier: &lt;code&gt;&amp;lt;boek&amp;gt;&lt;/code&gt; en sluit op deze manier: &lt;code&gt;&amp;lt;/boek&amp;gt;&lt;/code&gt;.&#xA;Je herkent misschien het gebruik van deze tags van &lt;strong&gt;HTML&lt;/strong&gt;? Dat komt omdat HTML en XML allebei gegroeid zijn uit dezelfde taal (SGML).&lt;/p&gt;&#xA;&lt;h2 id=&#34;waarom-xml-gebruiken&#34;&gt;Waarom XML gebruiken?&lt;/h2&gt;&#xA;&lt;p&gt;XML is nog steeds een vaak voorkomende manier om data te structureren en definiëren. Denk bijvoorbeeld aan webhook calls waarbij je kan kiezen tussen een response te krijgen in XML of JSON.&#xA;Al krijgt JSON de laaste jaren meer en meer voorkeur omwille van zijn makkelijke en leesbare syntax, toch zijn er nog instanties waarbij XML de enige optie is.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2. Data Warehousing &amp; BI</title>
      <link>http://localhost:1313/db-course/bigdata/datawarehousing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/bigdata/datawarehousing/</guid>
      <description>&lt;p&gt;Tot nu toe hebben we ons toegelegd op het zo optimaal mogelijk &lt;em&gt;bewaren en ophalen van data&lt;/em&gt;&amp;mdash;rekening houdend met integriteit en anderen ACID/BASE principes. Maar wat zijn we hier nu allemaal mee, los van een werkende applicatie? In dit hoofdstuk gaan we &lt;strong&gt;data benaderen vanuit business perspectief&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Een bedrijf kan gebaseerd op de miljoenen eenheden data dat het verzameld, op verschillende plekken en in verschillende formaten, beter beslissingen nemen. Strategische business beslissingen worden meestal op verschillende niveau&amp;rsquo;s genomen:&lt;/p&gt;</description>
    </item>
    <item>
      <title>2. Key-value stores</title>
      <link>http://localhost:1313/db-course/nosql/keyvaluestores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/nosql/keyvaluestores/</guid>
      <description>&lt;h2 id=&#34;11-persistente-hashmaps&#34;&gt;1.1 Persistente Hashmaps&lt;/h2&gt;&#xA;&lt;p&gt;De eenvoudigst mogelijke noSQL database die gebruik maakt van key/values is een simpele &lt;code&gt;HashMap&amp;lt;K,V&amp;gt;&lt;/code&gt; die je zelf serialiseert naar een flat file op de HDD. Een netwerk share kan dit bestand delen, maar locking systemen zullen moeten ingebouwd worden om te voorkomen dat dit bestand corrupt wordt.&lt;/p&gt;&#xA;&lt;p&gt;De &amp;ldquo;oude&amp;rdquo; manier om dit te doen op de JVM is gebruik te maken van &lt;code&gt;FileOutputStream&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;devselect&#34;&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;throws&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IOException&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;db&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;HashMap&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Object&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;joske&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Student&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Joske&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;database.db&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;FileOutputStream&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ObjectOutputStream&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;writeObject&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xD;&#xA;&lt;p&gt;Inlezen werkt op dezelfde manier, met &lt;code&gt;FileInputStream&lt;/code&gt; en &lt;code&gt;ObjectInputStream&lt;/code&gt;. Hoe je &lt;code&gt;Student&lt;/code&gt; klasse wordt geserialiseerd kan je &lt;strong&gt;zelf kiezen&lt;/strong&gt;, maar een vereiste is dat je de interface &lt;code&gt;Serializable&lt;/code&gt; implementeert!&lt;/p&gt;</description>
    </item>
    <item>
      <title>2. XSD</title>
      <link>http://localhost:1313/db-course/xml/xsd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/xml/xsd/</guid>
      <description>&lt;h1 id=&#34;xml-schema-definition&#34;&gt;XML Schema Definition&lt;/h1&gt;&#xA;&lt;p&gt;Wanneer we met XML communiceren tussen twee verschillende partijen, hebben we natuurlijk ook spelregels nodig. Daarvoor kunnen we een &lt;strong&gt;XML schema&lt;/strong&gt; of &lt;strong&gt;XSD&lt;/strong&gt; gebruiken. Daarin leggen we vast:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;welke tags wel of niet mogen voorkomen,&lt;/li&gt;&#xA;&lt;li&gt;in welke volgorde die moeten staan,&lt;/li&gt;&#xA;&lt;li&gt;hoe vaak een element mag voorkomen,&lt;/li&gt;&#xA;&lt;li&gt;of een element optioneel of verplicht is,&lt;/li&gt;&#xA;&lt;li&gt;het datatype van het element,&lt;/li&gt;&#xA;&lt;li&gt;welke attributen op een tag toegelaten zijn&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Ons vorige XML representatie van een collectie boeken kan met volgende XSD beschreven worden:&lt;/p&gt;</description>
    </item>
    <item>
      <title>3. Document stores</title>
      <link>http://localhost:1313/db-course/nosql/documentstores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/nosql/documentstores/</guid>
      <description>&lt;h3 id=&#34;0-data-filtering-recap&#34;&gt;0. Data filtering: recap&lt;/h3&gt;&#xA;&lt;p&gt;Wat is een &amp;ldquo;mapreduce&amp;rdquo; functie nu weer precies? Weet je nog, in het eerstejaarsvak BES, in Python? Stel, we hebben een array &lt;code&gt;[1, 2, 3, 4]&lt;/code&gt; en willen alle elementen verdubbelen. Dat kan erg eenvoudig met een &lt;code&gt;list(map(lambda...))&lt;/code&gt; statement:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;lambda&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;range&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hier gebruikten we een &amp;ldquo;lambda&amp;rdquo; om &lt;strong&gt;voor elk element&lt;/strong&gt; een functie los te laten, die dat element &lt;strong&gt;transformeert&lt;/strong&gt;, ofwel &amp;ldquo;mapt&amp;rdquo;. Python&amp;rsquo;s &lt;code&gt;map()&lt;/code&gt; functioneert exact hetzelfde als JavaScript&amp;rsquo;s &lt;code&gt;map()&lt;/code&gt;&amp;mdash;evenals &lt;code&gt;reduce()&lt;/code&gt; en &lt;code&gt;filter()&lt;/code&gt;. Omdat we met een JS-based document store gaan werken is het belangrijk om te weten hoe je bovenstaande principes in &lt;strong&gt;JavaScript&lt;/strong&gt; uitvoert.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3. XPath</title>
      <link>http://localhost:1313/db-course/xml/xpath/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/xml/xpath/</guid>
      <description>&lt;h1 id=&#34;xpath&#34;&gt;XPath&lt;/h1&gt;&#xA;&lt;p&gt;XPath is een taal die we gebruiken om specifieke elementen of attributen te vinden in een XML bestand. Zoals je in de voorbije oefeningen al hebt gemerkt zijn XML bestanden nogal groot en niet zo makkelijk in een oogopslag om alle informatie uit te halen.&lt;/p&gt;&#xA;&lt;p&gt;Laten we ons voorbeeldbestand nemen:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;boeken&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;boek&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;genre=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Non-Fiction&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;titel&amp;gt;&lt;/span&gt;Mythos&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/titel&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;auteur&amp;gt;&lt;/span&gt;Stephen Fry&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/auteur&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;jaar&amp;gt;&lt;/span&gt;2017&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/jaar&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/boek&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;boek&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;genre=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;biography&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;titel&amp;gt;&lt;/span&gt;Scar Tissue&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/titel&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;auteur&amp;gt;&lt;/span&gt;Anthony Kiedis&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/auteur&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;jaar&amp;gt;&lt;/span&gt;2004&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/jaar&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/boek&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;boek&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;genre=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;fantasy&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;titel&amp;gt;&lt;/span&gt;The Lost Metal&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/titel&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;auteur&amp;gt;&lt;/span&gt;Brandon Sanderson&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/auteur&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;jaar&amp;gt;&lt;/span&gt;2022&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/jaar&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/boek&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/boeken&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;xpath-voorbeelden&#34;&gt;XPath voorbeelden&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;/&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>4. Advanced map-red. queries</title>
      <link>http://localhost:1313/db-course/nosql/mapreduce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/nosql/mapreduce/</guid>
      <description>&lt;p&gt;Deze oefeningen gaan verder op de database die je hebt opgezet in het stuk over &lt;a href=&#34;./nosql/documentstores&#34;&gt;document stores&lt;/a&gt;. Herinstalleer indien nodig en download de benodigde gegevens via de instructies (2.2 Oefeningen: &lt;strong&gt;voorbereidingswerk&lt;/strong&gt;) in die link. Start voor onderstaande oefeningen de lokale &lt;em&gt;CouchDB Server&lt;/em&gt; en de &lt;em&gt;Admin Console&lt;/em&gt; (Project Fauxton) opnieuw op.&lt;/p&gt;&#xA;&lt;p&gt;Zoals ook op de &lt;a href=&#34;https://pouchdb.com/guides/queries.html&#34;&gt;PouchDB docs&lt;/a&gt; vermeld staat; zijn &lt;strong&gt;mapreduce&lt;/strong&gt; queries niet altijd nodig:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Documenten op &lt;code&gt;_id&lt;/code&gt; raadplegen gaat door middel van de Curl REST API&lt;/li&gt;&#xA;&lt;li&gt;Documenten sorteren of simpele queries uitvoeren gaat door middel van de Mango API, zoals reeds gezien. Dit zijn simpele queries, maar die volstaan meestal.&lt;/li&gt;&#xA;&lt;li&gt;Indien de DB store &amp;lt; &lt;code&gt;100.000&lt;/code&gt; records bevat, zoals de onze, kan je ook simpelweg alles &lt;strong&gt;in-memory&lt;/strong&gt; inladen (bijvoorbeeld in de browser), en met javascript zelf verder filteren:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;db&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;pouchdb&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// zoiets&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;skillsOfBigCourses&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;doc&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;ECTS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}).&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;doc&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;skills&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;})&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// gebruik dit in een template HTML factory&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;emit&#34;&gt;Emit&lt;/h4&gt;&#xA;&lt;p&gt;Een mapreduce query is in PouchDB uitvoerbaar met &lt;code&gt;db.query()&lt;/code&gt; en in CouchDB deel van de &lt;code&gt;_view&lt;/code&gt; API. Klik dus op het plusje &lt;code&gt;+&lt;/code&gt; bij All Documents en dan op &amp;ldquo;new view&amp;rdquo;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>5. Replication</title>
      <link>http://localhost:1313/db-course/nosql/replication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/nosql/replication/</guid>
      <description>&lt;p&gt;&lt;figure&gt;&#xD;&#xA;&#x9;&lt;a href=&#34;./img/pouchdb.jpg&#34; data-featherlight=&#34;image&#34;&gt;&#xD;&#xA;&#x9;&#x9;&lt;img src=&#34;./img/pouchdb.jpg&#34;  &gt;&#xD;&#xA;&#x9;&lt;/a&gt;&#xD;&#xA;&#x9;&#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Met &lt;em&gt;replication&lt;/em&gt; is het eenvoudig om clusters van clones te maken om de 99.9% uptime te kunnen garanderen, gegeven de juiste loadbalancing instellingen. Als voorbeeld gaan we een open-source JavaScript DB gebruiken genaamd &lt;a href=&#34;https://pouchdb.com&#34;&gt;PouchDB&lt;/a&gt;. PouchDB draait goed client-side in de browser, en interfacet heel gemakkelijk met zijn inspirator, CouchDB. Met Pouch is het een kwestie van een paar regeltjes code om replication aan te zetten tussen Pouch en de &amp;ldquo;master&amp;rdquo; Couch database, zoals ook zichtbaar op de Pouch website:&lt;/p&gt;</description>
    </item>
    <item>
      <title>API Basics</title>
      <link>http://localhost:1313/db-course/apis/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/apis/basics/</guid>
      <description>&lt;h2 id=&#34;layered-application-tiers&#34;&gt;Layered Application Tiers&lt;/h2&gt;&#xA;&lt;p&gt;In software engineering worden applicaties logisch opgesplitst in verschillende &amp;ldquo;tiers&amp;rdquo;. Een typische 3-Tier webapplicatie bestaat uit 3 lagen: de laag die de gebruiker te zien krijgt&amp;mdash;de UI, bestaande uit HTML en CSS, de &lt;em&gt;backend&lt;/em&gt;&amp;mdash;een server waar de requests naartoe worden gestuurd en die de aanvragen verwerkt, en een &lt;em&gt;data laag&lt;/em&gt; die onze database voorstelt. Onderstaand schema vat dit samen (via &lt;a href=&#34;https://www.researchgate.net/figure/A-Typical-3-Tier-Server-Architecture-Tier-1-Web-Server-Tier-2-Application-Server-Tier_fig1_221147997&#34;&gt;Trevor N. Mudge&lt;/a&gt;):&lt;/p&gt;&#xA;&lt;p&gt;&lt;figure&gt;&#xD;&#xA;&#x9;&lt;a href=&#34;./img/tier3.png&#34; data-featherlight=&#34;image&#34;&gt;&#xD;&#xA;&#x9;&#x9;&lt;img src=&#34;./img/tier3.png&#34;  &gt;&#xD;&#xA;&#x9;&lt;/a&gt;&#xD;&#xA;&#x9;&#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;In de praktijk varieert deze tier benadering van project tot project.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JDBC</title>
      <link>http://localhost:1313/db-course/apis/jdbc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/apis/jdbc/</guid>
      <description>&lt;h2 id=&#34;java-database-connectivity-jdbc&#34;&gt;Java Database Connectivity (JDBC)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;hoe-verbind-ik-java-met-de-db&#34;&gt;Hoe verbind ik Java met de DB?&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.tutorialspoint.com/jdbc/index.htm&#34;&gt;JDBC&lt;/a&gt; is een interface in de JDK die ons in staat stelt om een connectie te openen naar een database. &lt;strong&gt;JDBC is een API&lt;/strong&gt;: een abstracitelaag of een &lt;em&gt;protocol&lt;/em&gt;. Dit betekent dat we met JDBC kunnen verbinden naar eender welke server van eender welke flavor: een Oracle SQL, MSSQL, of SQLite database. De database &lt;em&gt;vendor&lt;/em&gt; wordt verborgen achter de JDBC laag. Voor deze oefeningen beperken we ons tot MySQL.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JDBI</title>
      <link>http://localhost:1313/db-course/apis/jdbi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/db-course/apis/jdbi/</guid>
      <description>&lt;h2 id=&#34;queriesobjecten-in-java-database-interface-v3-jdbi&#34;&gt;Queries/Objecten in Java DataBase Interface v3 (JDBI)&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://jdbi.org&#34;&gt;Jdbi&lt;/a&gt; (Java DataBase Interface v3) is een lightweight library geschreven bovenop JDBC. Het gebruikt dus de interne Java API om te communiceren tussen de database en de Java applicatie. Echter, het maakt het leven voor ons als ontwikkelaar op heel wat vlakken véél &lt;em&gt;aangenamer&lt;/em&gt;: waar JDBC eerder database-driven en dialect-afhankelijk is, is Jdbi eerder user-driven en met behulp van plugins dialect-onafhankelijk.&lt;/p&gt;&#xA;&lt;p&gt;JDBI3 is opgedeeld in modules, waarvan wij de volgende drie gaan gebruiken:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
